{"ast":null,"code":"import Vue from 'vue';\nimport Vuex from 'vuex';\nVue.use(Vuex);\n\n//User Information\nconst types = {\n  SET_IS_AUTHENTICATED: 'SET_IS_AUTHENTICATED',\n  SET_USER: 'SET_USER'\n};\n\n//Authenticated Information\nconst state = {\n  isAuthenticated: false,\n  user: {}\n};\nconst getters = {\n  isAuthenticated: state => state.isAuthenticated,\n  user: state => state.user\n};\nconst mutations = {\n  [types.SET_IS_AUTHENTICATED](state, isAuthenticated) {\n    if (isAuthenticated) state.isAuthenticated = isAuthenticated;else state.isAuthenticated = false;\n  },\n  [types.SET_USER](state, user) {\n    if (user) state.user = user;else state.user = {};\n  }\n};\nconst actions = {\n  setisAuthenticated: ({\n    commit\n  }, isAuthenticated) => {\n    commit(types.SET_IS_AUTHENTICATED, isAuthenticated);\n  },\n  setUser: ({\n    commit\n  }, user) => {\n    commit(types.SET_USER, user);\n  },\n  clearCurrentState: ({\n    commit\n  }) => {\n    commit(types.SET_IS_AUTHENTICATED, false);\n    commit(types.SET_USER, null);\n  }\n};\nexport default new Vuex.Store({\n  state,\n  getters,\n  mutations,\n  actions\n});","map":{"version":3,"names":["Vue","Vuex","use","types","SET_IS_AUTHENTICATED","SET_USER","state","isAuthenticated","user","getters","mutations","actions","setisAuthenticated","commit","setUser","clearCurrentState","Store"],"sources":["/Users/tianyu/Desktop/webSiteApp/CMS_testSection/Frontend/app/src/store/index.js"],"sourcesContent":["import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\n//User Information\nconst types = {\n  SET_IS_AUTHENTICATED: 'SET_IS_AUTHENTICATED',\n  SET_USER: 'SET_USER'\n}\n\n//Authenticated Information\nconst state = {\n  isAuthenticated: false,\n  user: {}\n}\n\nconst getters = {\n  isAuthenticated: state => state.isAuthenticated,\n  user: state => state.user\n}\n\nconst mutations = {\n  [types.SET_IS_AUTHENTICATED](state, isAuthenticated) {\n    if (isAuthenticated)\n      state.isAuthenticated = isAuthenticated\n    else\n      state.isAuthenticated = false\n  },\n  [types.SET_USER](state, user) {\n    if (user)\n      state.user = user\n    else\n      state.user = {}\n  }\n}\n\nconst actions = {\n  setisAuthenticated: ({ commit }, isAuthenticated) => {\n    commit(types.SET_IS_AUTHENTICATED, isAuthenticated)\n  },\n  setUser: ({ commit }, user) => {\n    commit(types.SET_USER, user)\n  },\n  clearCurrentState: ({ commit }) => {\n    commit(types.SET_IS_AUTHENTICATED, false)\n    commit(types.SET_USER, null)\n  }\n}\n\nexport default new Vuex.Store({\n  state,\n  getters,\n  mutations,\n  actions\n})\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,IAAI,MAAM,MAAM;AAEvBD,GAAG,CAACE,GAAG,CAACD,IAAI,CAAC;;AAEb;AACA,MAAME,KAAK,GAAG;EACZC,oBAAoB,EAAE,sBAAsB;EAC5CC,QAAQ,EAAE;AACZ,CAAC;;AAED;AACA,MAAMC,KAAK,GAAG;EACZC,eAAe,EAAE,KAAK;EACtBC,IAAI,EAAE,CAAC;AACT,CAAC;AAED,MAAMC,OAAO,GAAG;EACdF,eAAe,EAAED,KAAK,IAAIA,KAAK,CAACC,eAAe;EAC/CC,IAAI,EAAEF,KAAK,IAAIA,KAAK,CAACE;AACvB,CAAC;AAED,MAAME,SAAS,GAAG;EAChB,CAACP,KAAK,CAACC,oBAAoB,EAAEE,KAAK,EAAEC,eAAe,EAAE;IACnD,IAAIA,eAAe,EACjBD,KAAK,CAACC,eAAe,GAAGA,eAAe,MAEvCD,KAAK,CAACC,eAAe,GAAG,KAAK;EACjC,CAAC;EACD,CAACJ,KAAK,CAACE,QAAQ,EAAEC,KAAK,EAAEE,IAAI,EAAE;IAC5B,IAAIA,IAAI,EACNF,KAAK,CAACE,IAAI,GAAGA,IAAI,MAEjBF,KAAK,CAACE,IAAI,GAAG,CAAC,CAAC;EACnB;AACF,CAAC;AAED,MAAMG,OAAO,GAAG;EACdC,kBAAkB,EAAEA,CAAC;IAAEC;EAAO,CAAC,EAAEN,eAAe,KAAK;IACnDM,MAAM,CAACV,KAAK,CAACC,oBAAoB,EAAEG,eAAe,CAAC;EACrD,CAAC;EACDO,OAAO,EAAEA,CAAC;IAAED;EAAO,CAAC,EAAEL,IAAI,KAAK;IAC7BK,MAAM,CAACV,KAAK,CAACE,QAAQ,EAAEG,IAAI,CAAC;EAC9B,CAAC;EACDO,iBAAiB,EAAEA,CAAC;IAAEF;EAAO,CAAC,KAAK;IACjCA,MAAM,CAACV,KAAK,CAACC,oBAAoB,EAAE,KAAK,CAAC;IACzCS,MAAM,CAACV,KAAK,CAACE,QAAQ,EAAE,IAAI,CAAC;EAC9B;AACF,CAAC;AAED,eAAe,IAAIJ,IAAI,CAACe,KAAK,CAAC;EAC5BV,KAAK;EACLG,OAAO;EACPC,SAAS;EACTC;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}