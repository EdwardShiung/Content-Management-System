{"ast":null,"code":"'use strict';\n\nvar Vue = require('vue');\nVue = 'default' in Vue ? Vue['default'] : Vue;\nvar version = '2.2.2';\nvar compatible = /^2\\./.test(Vue.version);\nif (!compatible) {\n  Vue.util.warn('VueClickaway ' + version + ' only supports Vue 2.x, and does not support Vue ' + Vue.version);\n}\n\n// @SECTION: implementation\n\nvar HANDLER = '_vue_clickaway_handler';\nfunction bind(el, binding, vnode) {\n  unbind(el);\n  var vm = vnode.context;\n  var callback = binding.value;\n  if (typeof callback !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      Vue.util.warn('v-' + binding.name + '=\"' + binding.expression + '\" expects a function value, ' + 'got ' + callback);\n    }\n    return;\n  }\n\n  // @NOTE: Vue binds directives in microtasks, while UI events are dispatched\n  //        in macrotasks. This causes the listener to be set up before\n  //        the \"origin\" click event (the event that lead to the binding of\n  //        the directive) arrives at the document root. To work around that,\n  //        we ignore events until the end of the \"initial\" macrotask.\n  // @REFERENCE: https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\n  // @REFERENCE: https://github.com/simplesmiler/vue-clickaway/issues/8\n  var initialMacrotaskEnded = false;\n  setTimeout(function () {\n    initialMacrotaskEnded = true;\n  }, 0);\n  el[HANDLER] = function (ev) {\n    // @NOTE: this test used to be just `el.containts`, but working with path is better,\n    //        because it tests whether the element was there at the time of\n    //        the click, not whether it is there now, that the event has arrived\n    //        to the top.\n    // @NOTE: `.path` is non-standard, the standard way is `.composedPath()`\n    var path = ev.path || (ev.composedPath ? ev.composedPath() : undefined);\n    if (initialMacrotaskEnded && (path ? path.indexOf(el) < 0 : !el.contains(ev.target))) {\n      return callback.call(vm, ev);\n    }\n  };\n  document.documentElement.addEventListener('click', el[HANDLER], false);\n}\nfunction unbind(el) {\n  document.documentElement.removeEventListener('click', el[HANDLER], false);\n  delete el[HANDLER];\n}\nvar directive = {\n  bind: bind,\n  update: function (el, binding) {\n    if (binding.value === binding.oldValue) return;\n    bind(el, binding);\n  },\n  unbind: unbind\n};\nvar mixin = {\n  directives: {\n    onClickaway: directive\n  }\n};\nexports.version = version;\nexports.directive = directive;\nexports.mixin = mixin;","map":{"version":3,"names":["Vue","require","version","compatible","test","util","warn","HANDLER","bind","el","binding","vnode","unbind","vm","context","callback","value","process","env","NODE_ENV","name","expression","initialMacrotaskEnded","setTimeout","ev","path","composedPath","undefined","indexOf","contains","target","call","document","documentElement","addEventListener","removeEventListener","directive","update","oldValue","mixin","directives","onClickaway","exports"],"sources":["/Users/tianyu/Desktop/webSiteApp/CMS_testSection/Frontend/app/node_modules/vue-clickaway/dist/vue-clickaway.common.js"],"sourcesContent":["'use strict';\r\n\r\nvar Vue = require('vue');\r\nVue = 'default' in Vue ? Vue['default'] : Vue;\r\n\r\nvar version = '2.2.2';\r\n\r\nvar compatible = (/^2\\./).test(Vue.version);\r\nif (!compatible) {\r\n  Vue.util.warn('VueClickaway ' + version + ' only supports Vue 2.x, and does not support Vue ' + Vue.version);\r\n}\r\n\r\n\r\n\r\n// @SECTION: implementation\r\n\r\nvar HANDLER = '_vue_clickaway_handler';\r\n\r\nfunction bind(el, binding, vnode) {\r\n  unbind(el);\r\n\r\n  var vm = vnode.context;\r\n\r\n  var callback = binding.value;\r\n  if (typeof callback !== 'function') {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      Vue.util.warn(\r\n        'v-' + binding.name + '=\"' +\r\n        binding.expression + '\" expects a function value, ' +\r\n        'got ' + callback\r\n      );\r\n    }\r\n    return;\r\n  }\r\n\r\n  // @NOTE: Vue binds directives in microtasks, while UI events are dispatched\r\n  //        in macrotasks. This causes the listener to be set up before\r\n  //        the \"origin\" click event (the event that lead to the binding of\r\n  //        the directive) arrives at the document root. To work around that,\r\n  //        we ignore events until the end of the \"initial\" macrotask.\r\n  // @REFERENCE: https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\r\n  // @REFERENCE: https://github.com/simplesmiler/vue-clickaway/issues/8\r\n  var initialMacrotaskEnded = false;\r\n  setTimeout(function() {\r\n    initialMacrotaskEnded = true;\r\n  }, 0);\r\n\r\n  el[HANDLER] = function(ev) {\r\n    // @NOTE: this test used to be just `el.containts`, but working with path is better,\r\n    //        because it tests whether the element was there at the time of\r\n    //        the click, not whether it is there now, that the event has arrived\r\n    //        to the top.\r\n    // @NOTE: `.path` is non-standard, the standard way is `.composedPath()`\r\n    var path = ev.path || (ev.composedPath ? ev.composedPath() : undefined);\r\n    if (initialMacrotaskEnded && (path ? path.indexOf(el) < 0 : !el.contains(ev.target))) {\r\n      return callback.call(vm, ev);\r\n    }\r\n  };\r\n\r\n  document.documentElement.addEventListener('click', el[HANDLER], false);\r\n}\r\n\r\nfunction unbind(el) {\r\n  document.documentElement.removeEventListener('click', el[HANDLER], false);\r\n  delete el[HANDLER];\r\n}\r\n\r\nvar directive = {\r\n  bind: bind,\r\n  update: function(el, binding) {\r\n    if (binding.value === binding.oldValue) return;\r\n    bind(el, binding);\r\n  },\r\n  unbind: unbind,\r\n};\r\n\r\nvar mixin = {\r\n  directives: { onClickaway: directive },\r\n};\r\n\r\nexports.version = version;\r\nexports.directive = directive;\r\nexports.mixin = mixin;"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;AACxBD,GAAG,GAAG,SAAS,IAAIA,GAAG,GAAGA,GAAG,CAAC,SAAS,CAAC,GAAGA,GAAG;AAE7C,IAAIE,OAAO,GAAG,OAAO;AAErB,IAAIC,UAAU,GAAI,MAAM,CAAEC,IAAI,CAACJ,GAAG,CAACE,OAAO,CAAC;AAC3C,IAAI,CAACC,UAAU,EAAE;EACfH,GAAG,CAACK,IAAI,CAACC,IAAI,CAAC,eAAe,GAAGJ,OAAO,GAAG,mDAAmD,GAAGF,GAAG,CAACE,OAAO,CAAC;AAC9G;;AAIA;;AAEA,IAAIK,OAAO,GAAG,wBAAwB;AAEtC,SAASC,IAAIA,CAACC,EAAE,EAAEC,OAAO,EAAEC,KAAK,EAAE;EAChCC,MAAM,CAACH,EAAE,CAAC;EAEV,IAAII,EAAE,GAAGF,KAAK,CAACG,OAAO;EAEtB,IAAIC,QAAQ,GAAGL,OAAO,CAACM,KAAK;EAC5B,IAAI,OAAOD,QAAQ,KAAK,UAAU,EAAE;IAClC,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzCnB,GAAG,CAACK,IAAI,CAACC,IAAI,CACX,IAAI,GAAGI,OAAO,CAACU,IAAI,GAAG,IAAI,GAC1BV,OAAO,CAACW,UAAU,GAAG,8BAA8B,GACnD,MAAM,GAAGN,QACX,CAAC;IACH;IACA;EACF;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAIO,qBAAqB,GAAG,KAAK;EACjCC,UAAU,CAAC,YAAW;IACpBD,qBAAqB,GAAG,IAAI;EAC9B,CAAC,EAAE,CAAC,CAAC;EAELb,EAAE,CAACF,OAAO,CAAC,GAAG,UAASiB,EAAE,EAAE;IACzB;IACA;IACA;IACA;IACA;IACA,IAAIC,IAAI,GAAGD,EAAE,CAACC,IAAI,KAAKD,EAAE,CAACE,YAAY,GAAGF,EAAE,CAACE,YAAY,CAAC,CAAC,GAAGC,SAAS,CAAC;IACvE,IAAIL,qBAAqB,KAAKG,IAAI,GAAGA,IAAI,CAACG,OAAO,CAACnB,EAAE,CAAC,GAAG,CAAC,GAAG,CAACA,EAAE,CAACoB,QAAQ,CAACL,EAAE,CAACM,MAAM,CAAC,CAAC,EAAE;MACpF,OAAOf,QAAQ,CAACgB,IAAI,CAAClB,EAAE,EAAEW,EAAE,CAAC;IAC9B;EACF,CAAC;EAEDQ,QAAQ,CAACC,eAAe,CAACC,gBAAgB,CAAC,OAAO,EAAEzB,EAAE,CAACF,OAAO,CAAC,EAAE,KAAK,CAAC;AACxE;AAEA,SAASK,MAAMA,CAACH,EAAE,EAAE;EAClBuB,QAAQ,CAACC,eAAe,CAACE,mBAAmB,CAAC,OAAO,EAAE1B,EAAE,CAACF,OAAO,CAAC,EAAE,KAAK,CAAC;EACzE,OAAOE,EAAE,CAACF,OAAO,CAAC;AACpB;AAEA,IAAI6B,SAAS,GAAG;EACd5B,IAAI,EAAEA,IAAI;EACV6B,MAAM,EAAE,SAAAA,CAAS5B,EAAE,EAAEC,OAAO,EAAE;IAC5B,IAAIA,OAAO,CAACM,KAAK,KAAKN,OAAO,CAAC4B,QAAQ,EAAE;IACxC9B,IAAI,CAACC,EAAE,EAAEC,OAAO,CAAC;EACnB,CAAC;EACDE,MAAM,EAAEA;AACV,CAAC;AAED,IAAI2B,KAAK,GAAG;EACVC,UAAU,EAAE;IAAEC,WAAW,EAAEL;EAAU;AACvC,CAAC;AAEDM,OAAO,CAACxC,OAAO,GAAGA,OAAO;AACzBwC,OAAO,CAACN,SAAS,GAAGA,SAAS;AAC7BM,OAAO,CAACH,KAAK,GAAGA,KAAK"},"metadata":{},"sourceType":"script","externalDependencies":[]}